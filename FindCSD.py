#file1 and file2 correspond to files similar to RhoAndVar.txt generated by FindCorrAndVar.cpp. Outputs to 4 files: 'AllValues.txt', containing rho, var, C, S and D for each pair, and 'UseableCValues.txt', 'UseableDValues.txt', 'UseableSValues.txt', containing only C, D and S respectively for each gene pair. file1 and file2 must be of equal length, and sorted in equal order


import math

file1 = 'RhoAndVarOrig.txt'
file2 = 'RhoAndVarRand.txt'

f1 = open(file1)
f2 = open(file2)
allVals = open('AllValues.txt', 'w')
cFile = open('UseableCValues.txt', 'w')
dFile = open('UseableDValues.txt', 'w')
sFile = open('UseableSValues.txt', 'w')

print >> allVals, 'Gene 1', '\t', 'Gene2', '\t', 'rho_1', '\t', 'var_1', '\t', 'rho_2', '\t', 'var_2', '\t', 'C', '\t', 'S', '\t', 'D' 

for line1 in f1:
    line2 = f2.readline()
    splitLine1 = line1.rstrip().split('\t')
    splitLine2 = line2.rstrip().split('\t')
    geneA = splitLine1[0]
    geneB =  splitLine1[1]
    rho1 =  float(splitLine1[2])
    var1 =  float(splitLine1[3])
    rho2 = float(splitLine2[2])
    var2 = float(splitLine2[3])

    comboSD = math.sqrt(var1 + var2)
    
    if (geneA != geneB):
        cVal = abs(rho1+rho2)/comboSD
        dVal = (abs(rho1)+abs(rho2)-abs(rho1+rho2))/comboSD
        sVal = abs(abs(rho1)-abs(rho2))/comboSD
        print >> allVals, geneA, '\t', geneB, '\t', rho1, '\t', var1, '\t', rho2, '\t', var2, '\t', cVal, '\t', sVal, '\t', dVal

        if (math.isnan(cVal) == False):
            print >> cFile, cVal
            print >> sFile, sVal
            print >> dFile, dVal

    
    if (geneA == geneB):
        cVal = -2
        dVal = -2
        sVal = -2


f1.close()
f2.close()
allVals.close()
cFile.close()
sFile.close()
dFile.close()
