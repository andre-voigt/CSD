#files corresponds to a list of file similar to RhoAndVar.txt generated by FindCorrAndVar.cpp. Outputs to 4 files: 'AllValues.txt', containing rho, var, C, S and D for each pair, and 'UseableCValues.txt', 'UseableDValues.txt', 'UseableSValues.txt', containing only C, D and S respectively for each gene pair. file1 and file2 must be of equal length, and sorted in equal order

files = ['../RhoAndVarGanglia.txt', '../RhoAndVarCortex.txt', '../RhoAndVarLung.txt']

import math


def findC(rhoList, comboSD):
    c = abs(sum(rhoList))/comboSD
    return c

def findD(rhoList, comboSD):
    absRho = []
    for rho in rhoList:
        absRho.append(abs(rho))
    if sum(absRho) == sum(rhoList):
        d = 0
    else:
        d = sum(absRho)/comboSD

    return d
    
def findS(rhoList, comboSD):
    absRho = []
    for rho in rhoList:
        absRho.append(abs(rho))
    s = (max(absRho)-min(absRho))/comboSD
    return s




f = []
for fname in files:
    f.append(open(fname))


allVals = open('AllValues.txt', 'w')

cFile = open('UseableCValues.txt', 'w')
dFile = open('UseableDValues.txt', 'w')
sFile = open('UseableSValues.txt', 'w')

print >> allVals, 'Gene 1'+'\t'+'Gene2'+'\t',
for i in range(len(files)):
    print >> allVals, 'rho_'+str(i)+'\t'+'var_'+str(i)+'\t',

print >> allVals, 'C'+'\t'+'S'+'\t'+'D'


line = []

for i in range(len(files)):
    line.append(f[i].readline())
    

while(line[0] != ''):
    
    splitLine = []
    for i in range(len(line)):
        splitLine.append(line[i].rstrip().split('\t'))
        
    geneA = splitLine[0][0]
    geneB = splitLine[0][1]

    rhoList = []
    varList = []
    
    for i in range(len(splitLine)):
        rhoList.append(float(splitLine[i][2]))
        varList.append(float(splitLine[i][3]))
    
    comboSD = math.sqrt(sum(varList))
    
    if (geneA != geneB):
        cVal = findC(rhoList, comboSD)
        dVal = findD(rhoList, comboSD)
        sVal = findS(rhoList, comboSD)
        
        print >> allVals, str(geneA)+'\t'+str(geneB)+'\t', 

        
        for i in range(len(files)):
            print >> allVals, str(rhoList[i])+'\t'+str(varList[i])+'\t', 


        print >> allVals, str(cVal)+'\t'+str(sVal)+'\t'+str(dVal)
        print >> cFile, cVal
        print >> sFile, sVal
        print >> dFile, dVal
    
    if (geneA == geneB):
        cVal = -2
        dVal = -2
        sVal = -2
    for i in range(len(files)):
        line[i] = f[i].readline()

for i in range(len(files)):
    f[i].close()

allVals.close()
cFile.close()
sFile.close()
dFile.close()

    
